@use 'tags.scss';
@import url('https://fonts.googleapis.com/css2?family=Arvo:wght@700&family=Montserrat&family=Recursive&display=swap');

$dark: #11100f;
$light-gray: #bbb;
$light: #ffe6c5;
$icon-size: calc(4vw + 32px);
$tex-cardboard: "../images/cardboard.jpg";
$tex-paper: "../images/paper-with-fibers.jpg";
$tex-paper-blue: "../images/paper-blue.jpg";
$header-height: 60px;

html, body {
	margin: 0;
}

body {
	box-sizing: border-box;
	background-color: $dark;
	color: white;
	font-family: 'Montserrat', sans-serif;
	display: flex;
	flex-direction: column;
	position: relative;
	line-height: 1.4em;
	overflow-y: scroll;
	overflow-x: hidden;
}

::selection {
	background-color: #817770;
}

h1, h2, h3 {
	font-family: 'Arvo', serif;
	margin: 0;
}
h2 {
	font-size: 1.8em;
	line-height: initial;
	margin-bottom: 8px;
}
h3 {
	font-size: 1.4em;
}

p {
	margin: 0 0 40px 0;
}

b {
	font-weight: 500;
}

span {
	display: flex;
	flex-flow: wrap;
	gap: 6px;
}

@mixin btn-elevate($amount) {
	$horiz: 14px;
	padding: 10px $horiz (10px + $amount) $horiz;
	box-shadow: 0 (-$amount) 0 #0007 inset;

	$pad: 4px - $amount;
	@if $pad != 0px {
		margin-top: $pad;
	}
}

button {
	@include btn-elevate(4px);
	outline: none;
	border: none;
	border-radius: 4px;
	background-color: white;
	color: $dark;
	font-family: inherit;
	font-weight: bold;
	font-size: 0.9em;
	text-transform: uppercase;
	line-height: normal;
	transition: 0.5s;

	i {
		font-size: inherit;
	}
}
button:enabled {
	cursor: pointer;
}
button:not(:disabled):hover {
	@include btn-elevate(2px);
	transition: 0.15s;
}
button:not(:disabled):active {
	@include btn-elevate(1px);
	background-color: #aaa;
}

a {
	color: inherit;
	font-weight: bold;
}
a:hover {
	color: white;
	background-color: #7778;
}
a:active {
	background-color: #777f;
}
a.button {
	@extend button;
	text-decoration: none;
	align-self: center;
	text-align: center;
}

.content {
	overflow: hidden;
}

.apps {
	padding: 4px 0;
	gap: 8px;
	width: 100%;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;

	> * {
		transition-duration: 0.1s;
		display: inline-flex;
		border-radius: 16px;
		padding: 16px;
		text-decoration: none;
		background-color: #4443;
		min-width: 300px;
		max-width: 650px;
		position: relative;
	
		h3, b {
			color: var(--col);
			font-weight: bold;
		}

		> img {
			width: $icon-size;
			height: $icon-size;
			margin-right: 16px;
			
			@media (max-width: 800px) {
				position: absolute;
				right: 0;
				margin-right: 8px;
				top: 8px;
				width: 32px;
				height: 32px;
			}
		}
		> div {
			display: flex;
			flex-direction: column;
		}
		p {
			margin: 6px 0 auto 0;
			padding-bottom: 12px;
		}
	}
	> *:hover {
		background-color: #4445;
	}
}

header {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	z-index: 10;

	h1 {
		font-family: 'Recursive', serif;
		font-size: 2em;
		font-weight: normal;
		text-transform: lowercase;
	}

	div {
		padding: 24px 18px;
		box-sizing: border-box;
		align-items: center;
		justify-content: center;
		display: flex;
		background-color: #24211dcc;
		color: $light;
		backdrop-filter: grayscale(0.5) blur(4px);
		z-index: 2;
	}

	span {
		background-color: $light;
		height: 2px;
		box-shadow: 0 0 10px #000a, 0 0 20px #000a;
	}
}

$stroke-color: #1a1717;
$outline-width: 0.3em;
$shake-amount: 5deg;
$sticker-scale: 0.5;

svg {
	position: absolute;
	pointer-events: none;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	z-index: 0;
	stroke-linejoin: round;
	filter: drop-shadow(0 0 4px #0005);

	line { stroke: $stroke-color; }

	text {
		fill: #fb8;
		stroke: $stroke-color;
		stroke-width: $outline-width;
		paint-order: stroke;
		font-family: 'Recursive';
		font-size: 3em;
		font-weight: bold;
	}
}

@keyframes shake-offset {
	0%   { transform: rotate(-$shake-amount); }
	50%  { transform: rotate($shake-amount); }
	100% { transform: rotate(-$shake-amount); }
}

.shake {
	animation: shake-offset 3.5s ease-in-out infinite;
	transform-box: fill-box;
	transform-origin: top center;
}

.sticker {
	transform: translate(19%, 16%) scale(0.4);
	stroke: $stroke-color;
	stroke-width: $outline-width * 5;
	paint-order: stroke;
}

.contrast-children {
	gap: 4px;

	> p, h2 {
		background-color: #fff0d5a8;
		margin: 0;
		padding: 2px;
	}
}

section {
	padding: 90px 6vw;
	align-self: center;
	align-items: center;
	display: flex;
	flex-direction: column;
	width: 100%;
	min-height: 400px;
	box-sizing: border-box;
	position: relative;

	> *:not(div) {
		text-align: center;
	}
}

section#greeting {
	padding-top: #{90px + $header-height};
	text-align: center;
	justify-content: center;

	> p {
		padding-bottom: 0;
		margin: 0;
	}
}

.dark-on-light {
	background: url($tex-paper-blue);
	color: black;
	font-weight: 500;
	position: relative;
	z-index: 0;
	
	b { font-weight: bold; }

	a:hover {
		color: black;
		background-color: #fff8;
	}
	a:active {
		background-color: #ffff;
	}

	.apps > * {
		background-color: #fff0d5a8;
	}
}

.paper {
	background: url($tex-paper);
	filter: sepia(0.2);
}

@keyframes spin {
	0%   { transform: rotate(0deg); }
	100% { transform: rotate(360deg); }
}

.cardboard {
	transform: translateY(-20px);
	background: none;
	padding: 20vh 20vw;
	justify-content: center;

	> * { z-index: 1; }

	b { color: #fb8; }
	a { background-color: #fb8; }

	> div {
		display: flex;
		align-items: center;
		flex-direction: column;
		padding: 16px;
		box-sizing: border-box;
		gap: 32px;

		> div { text-align: center; }

		* { margin: 0; }
	}

	> i {
		position: absolute;
		font-size: calc(2em + 1vw);
		color: #1a1717;
		animation: spin 12s linear infinite;
	}
}

.cardboard-cutout {
	x: 20%;
	y: 20%;
	width: 60%;
	height: 60%;
	rx: 16px;
}

section#about {
	p {
		margin: 0 0 24px 0;
		text-align: left;
	}

	h3 {
		margin: 32px 0 16px 0;
	}
}

ul {
	display: inline-flex;
	flex-direction: column;
	gap: 2px;
	text-align: left;
	margin: 24px 0;

	> div {
		display: inline-flex;
		flex-direction: column;
		margin-top: 6px;
	}

	li {
		font-weight: 500;

		&.styling {
			font-style: italic;
		}

		&.sub {
			margin-left: 32px;
		}

		i {
			opacity: 0.5;
			margin-left: 8px;
		}
		&:hover {
			i {
				opacity: 1;
			}
		}

	}
}

.tag {
	border-radius: 1000px;
	border: 2px solid $light-gray;
	padding: 6px 10px;
	gap: 4px;
}

@media screen and (max-width: 800px) {
	.sticker {
		transform: translate(5%, 18%) scale(0.25);
		stroke-width: $outline-width * 8;
	}

	.cardboard {
		padding: 16vh 5vw;

		> i {
			display: none;
		}
	}

	.cardboard-cutout {
		x: 5%;
		width: 90%;
	}
}